.data
	ov: .asciiz "overflow\n" #print on screen

.text
main:
	li $v0, 5 #reading signal
	syscall
	
	move $t1, $v0 #saving signal
	
	li $v0, 5 #reading A number
	syscall
	
	move $t2, $v0 #saving A number
	
	li $v0, 5 #reading B number
	syscall
	
	move $t3, $v0 #saving B number	
	
	blt $t2, $zero, verificaB
	
	nor $t4, $t2, $zero
	sltu $t4, $t4, $t3
	bne $t4, $zero, overflow
		
	li $v0, 1 #command to print interger
	move $a0, $s0 #moving the content to a0 address to print
	syscall
	
	li $v0, 10 #exit 
	syscall #call the opereating system

	overflow:
		addu $s0, $t2, $t3 #adding t2+t3 n saving in s0
		li $v0, 1 #command to print interger
		move $a0, $s0 #moving the content to a0 address to print
		syscall	
		li $v0, 10 #exit 
		syscall #call the opereating system

	
	verificaB:
	blt $t3, $zero, soma
	
	soma:
	addu $s0, $t2, $t3 #adding t2+t3 n saving in s0
	bgt $s0, $zero, print
		
	print:
	li $v0, 4 #instruction to print a string
	la $a0, ov #pointer to string address
	syscall #print string
		
		
		
